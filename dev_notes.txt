This file will be unstructured. I will use it to keep a diary of the dev process

2023-10-10:

Aim today is to get the intial commit from chibicc ported. I think I will have
one directory per revision. I may merge together some commits into a single
directory. This will lead to many versions of the compiler in tree but will mean
that I won't have a hard dependency on git. I'll keep the main code in a single
C file (chibicc splits it out at some point) just for simplicity. With separate
versions in tree I can see the diff between each with the diff utility (which I
may port to JS too). There is method in my madness. I want this to eventually
work on a win32 machine with no dependencies. Initially dev will be done on
Linux.

Status, not quite there. Got code partially ported to js_to_c dialect but need
to fix a couple of things:

passing of argv
building the output of the number "compiler" with cc_x86
run the compiler under JS to test that also works
Get the compiler working when compiled with tcc and gcc

At this point "compiler" is a bit of a strong word when all it does atm is
generate an assembly language program that just returns a single. This is the
same as the initial version of chibicc. From here chibicc is incremenetally
grown until it can handle, expressions, blocks, local variables, functions etc.
Each commit in the chibicc repo incrementally adds new features to the compiler.

Note I will be targeting i386 (same as boteicc) since my tcc_js bootstrap
compiler is also i386.
